/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.javanunes.telas;

import com.javanunes.controle.Controle;
import java.awt.BorderLayout;
import java.io.File;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.table.DefaultTableModel;

import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;

/**
 *
 * @author ricardo
 */
public class JojocafemysqlTela extends javax.swing.JFrame {
    public static DefaultMutableTreeNode root = new DefaultMutableTreeNode("Root");
    Controle controle = new Controle();
    /**
     * Creates new form JojocafemysqlTela
     */
    public JojocafemysqlTela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    public void alert(String mensagem){
        JOptionPane.showMessageDialog (null, mensagem);
    }
    
    
    public void mostraBancos(){
         
         String resultado;
         String query="SHOW databases;";
         int registrosRetornados=0;
         JojocafemysqlTela tela = new JojocafemysqlTela();
         Connection conexao;
         ResultSet rs1,rs2 = null;
         Statement st = null;
         conexao = controle.conectaNoBancoDados("mysql");
        try
        {
            System.out.println("BANCOS ACHADOS: -----------------------------------"); 
            st = conexao.createStatement();
            rs1 = st.executeQuery(query);
            cbBancoDados.removeAllItems();
            while(rs1.next()){
               resultado = rs1.getString("Database"); 
               System.out.println(resultado); 
               cbBancoDados.addItem(resultado);
               registrosRetornados++;
            }
            if(registrosRetornados > 0){
                controle.setEmUso(true);
                btConecta.setEnabled(false);
            }
            rs1.close();
        } catch (SQLException e)
        {
            System.out.println("Erro encontrado ao ver bancos:" + e);
        }
        finally{
            //gui.messageBox("Deu merda Javinha");
        }   
    }
    
    public void adicionaLinhaTabela(String cel1,String cel2, String cel3, String cel4){
        Object[] linha = { cel1, cel2, cel3, cel4 };
        DefaultTableModel model = (DefaultTableModel) tbEstruturaBanco.getModel();
        model.addRow(linha);
    }
    
    public void mostraEstruturaTabelaLinha(String banco, String tabela){
        try{
            Connection conexao = controle.conectaNoBancoDados2(banco);
            Statement st = conexao.createStatement();
            String query ="DESCRIBE "+tabela;
            ResultSet rs = st.executeQuery(query);
            ResultSetMetaData md = rs.getMetaData();
            int col = md.getColumnCount();
            for (int i = 1; i <= col; i++){
              String col_name = md.getColumnName(i);
              System.out.print(col_name+"\t");
            }
            System.out.println();
            DatabaseMetaData dbm = conexao.getMetaData();
            ResultSet rs1;
            rs1 = dbm.getColumns(null,"%",tabela,"%");

             while (rs1.next()){
               String col_name = rs1.getString("COLUMN_NAME");
               String data_type = rs1.getString("TYPE_NAME");
               String col_size = rs1.getString("COLUMN_SIZE");
               String nullable = rs1.getString("NULLABLE");
               adicionaLinhaTabela(col_name,data_type,col_size, nullable);
             }
             rs1.close();
        }
        catch(SQLException e){
            System.out.println("ixi, não consegui não ver a estrutura nao---------------------------");
        }
        
    } 
    
    
    public int apagaLinhasTabela(){
        int registrosRetornados=0;
        try{
             DefaultTableModel model = (DefaultTableModel)  tbEstruturaBanco.getModel();
             System.out.println("Ter linhas ainda existente: -------------------: "+model.getRowCount());
             while(model.getRowCount()>0){
               model.removeRow(0);
               registrosRetornados++;
             }
             return registrosRetornados;
        }
        catch(IllegalArgumentException e){
            System.out.println("Não existe linhas para se apagar: "+e);
            return 0;
        }  
    }
    
    

    public int mostraTabelas(String banco){
        
         if(banco.equals("") || banco == null ){
             alert("Não chegou nada para mostrar em tabelas");
             return 0;
         }
         
         JojocafemysqlTela tela = new JojocafemysqlTela();
         Connection conexao;
         ResultSet rs1,rs2 = null;
         Statement st = null;
         String resultado;
         String query="SHOW tables;";
         conexao = controle.conectaNoBancoDados2(banco);
         
        try
        {
            System.out.println("TABELAS ACHADAS: -----------------------------------");
            st = conexao.createStatement();
            rs1 = st.executeQuery(query);
            
             DatabaseMetaData meta = conexao.getMetaData();
             rs1 = meta.getTables(null, null, null,new String[] {"TABLE"});
             rs2 = meta.getTables(null, null,"%", null);
             //cbBancoDados.removeAllItems();
             cbTabelasDados.removeAllItems();
            
            while(rs1.next()){
               resultado = rs1.getString("TABLE_NAME"); 
               System.out.println("::: > "+resultado); 
               cbTabelasDados.addItem(resultado);
            }
            rs1.close();
            return 0;
            
        } 
        catch (SQLException e)
        {
            System.out.println("aconteceu um erro: "+e);
            return 0;
        }
        finally{
            //gui.messageBox("Deu merda Javinha");
            return 0;
        }   
    }
    
    
    
    
    
    public static void ChamaJanelaPrincipal(){
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JojocafemysqlTela().setVisible(true);
            }
        });   
    }    
    
    public void setEnableBotaoConectar(boolean status){
        btConecta.setEnabled(status);
    }
   
    public int conectaBancoMostraConteudoListasBloqueiaBotaoELogin(){
        
        if(!txtUsuario.getText().equals("")){
            if(!txtHost.getText().equals("")){
                mostraBancos();
                mostraTabelas("mysql");
                return 1;
            }
            else{
                alert("Faltou especificar um host para se conectar!");
                txtHost.setFocusable(true);
                return 0;
            }
        }
        else{
            alert("O usuário para conectar-se ao banco de dados esta vazio");
            txtUsuario.setFocusable(true);
            return 0;
        }
        
        
        
        
        
        
    }
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tbEstruturaBanco = new javax.swing.JTable();
        lbStatus = new javax.swing.JLabel();
        btConecta = new javax.swing.JButton();
        btDesconecta = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        btApagar = new javax.swing.JButton();
        javax.swing.JButton btSalvar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbBancoDados = new javax.swing.JComboBox();
        cbTabelasDados = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        javax.swing.JPasswordField txtPassowrd = new javax.swing.JPasswordField();
        txtHost = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JojoCafe Surfer Mysql");

        tbEstruturaBanco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbEstruturaBanco);

        lbStatus.setText("Em:");

        btConecta.setText("Conectar...");
        btConecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConectaActionPerformed(evt);
            }
        });

        btDesconecta.setText("Desconecta");
        btDesconecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesconectaActionPerformed(evt);
            }
        });

        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        btApagar.setText("Apagar");
        btApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btApagarActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        jLabel1.setText("BANCOS :");

        jLabel2.setText("TABELAS:");

        cbBancoDados.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBancoDadosItemStateChanged(evt);
            }
        });
        cbBancoDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBancoDadosActionPerformed(evt);
            }
        });

        cbTabelasDados.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTabelasDadosItemStateChanged(evt);
            }
        });

        jLabel3.setText("USUÁRIO:");

        jLabel4.setText("SENHA:");

        jLabel5.setText("HOST:");

        txtUsuario.setText("root");

        txtHost.setText("localhost");
        txtHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHostActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btConecta)
                                .addGap(36, 36, 36)
                                .addComponent(btDesconecta)
                                .addGap(40, 40, 40)
                                .addComponent(btAtualizar)
                                .addGap(39, 39, 39)
                                .addComponent(btApagar)
                                .addGap(38, 38, 38)
                                .addComponent(btSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
                            .addComponent(lbStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(cbBancoDados, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbTabelasDados, 0, 365, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUsuario)
                                    .addComponent(txtPassowrd)
                                    .addComponent(txtHost, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btApagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btDesconecta, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(btConecta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(lbStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbBancoDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTabelasDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPassowrd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btConectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConectaActionPerformed
        // TODO add your handling code here:
        conectaBancoMostraConteudoListasBloqueiaBotaoELogin();
        System.out.println("Pronto, credenciais obtidas!");
    }//GEN-LAST:event_btConectaActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed

         
        
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void cbBancoDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBancoDadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBancoDadosActionPerformed

    private void cbBancoDadosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBancoDadosItemStateChanged
        // TODO add your handling code here:
        
       mostraTabelas(cbBancoDados.getSelectedItem().toString());
       System.out.println("trocado menu drop ---------------------------------");
        
    }//GEN-LAST:event_cbBancoDadosItemStateChanged

    private void cbTabelasDadosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTabelasDadosItemStateChanged
        // TODO add your handling code here:
        apagaLinhasTabela();
        mostraEstruturaTabelaLinha(cbBancoDados.getSelectedItem().toString(), cbTabelasDados.getSelectedItem().toString() );
    }//GEN-LAST:event_cbTabelasDadosItemStateChanged

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
   
        
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btDesconectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesconectaActionPerformed
        // TODO add your handling code here:
        apagaLinhasTabela();
    }//GEN-LAST:event_btDesconectaActionPerformed

    private void txtHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHostActionPerformed

    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btApagar;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btConecta;
    private javax.swing.JButton btDesconecta;
    private javax.swing.JComboBox cbBancoDados;
    private javax.swing.JComboBox cbTabelasDados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JTable tbEstruturaBanco;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
   



    
    
    
    
}
